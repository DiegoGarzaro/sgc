name: Auto Pull Request Pipeline

on:
  pull_request:
    branches:
      - '**'

jobs:
  AutoPR:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      - name: Create Python venv
        run: python -m venv venv

      - name: Install dependencies
        run: |
          venv/bin/python -m pip install --upgrade pip
          venv/bin/python -m pip install -r requirements_dev.txt black isort commitizen

      - name: Check Code Formatting with Black
        run: venv/bin/black --check .

      - name: Check Import Sorting with Isort
        run: venv/bin/isort --check .

      # Validate the PR title (for squash merges)
      - name: Validate Pull Request Title
        if: github.event_name == 'pull_request'
        run: venv/bin/python -m commitizen check --message "${{ github.event.pull_request.title }}"

      - name: Fetch tags
        run: git fetch --tags --prune --unshallow || git fetch --tags

      - name: Bump Version
        run: |
          # Try to find the last tag, or use an empty string if none is found
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            echo "No previous tags found. Skipping cz bump."
            exit 0
          fi

          # Check if there are new commits since LAST_TAG
          if [ -z "$(git log ${LAST_TAG}..HEAD)" ]; then
            echo "No new commits since last tag. Skipping cz bump."
          else
            echo "VERSION = \"$NEW_VERSION\"" > app/version.py
            venv/bin/cz bump --yes
          fi
